name: 'Translate Documentation Action'
description: 'Translates documentation files automatically using machine translation'
author: 'TanStack'

inputs:
  target_language:
    description: 'Target language code (e.g., zh-hans, es, fr). Leave empty to translate all languages.'
    required: false
  github_token:
    description: 'GitHub token for creating PRs'
    required: false
    default: ${{ github.token }}
  api_key:
    description: 'API key for translation service (e.g., OPENAI_API_KEY)'
    required: true
  translation_package:
    description: 'NPM package to use for translation'
    required: false
    default: '@tanstack-dev/translate-docs'
  base_branch:
    description: 'Base branch to create PR against'
    required: false
    default: 'main'
  pr_branch:
    description: 'Branch name for the PR'
    required: false
    default: 'docs/update-translations'
  pr_title:
    description: 'Title for the PR'
    required: false
    default: 'Update translations'
  pr_body:
    description: 'Body text for the PR'
    required: false
    default: 'This PR updates the documentation translations automatically.\n\nGenerated by the translate workflow.'
  commit_message:
    description: 'Commit message for the translation changes'
    required: false
    default: 'docs: update documentation translations'
  schedule_cron:
    description: 'Cron schedule for automatic translation (used in workflow template)'
    required: false
    default: '0 20 * * *'
  
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for proper timestamp lookup

    - name: Check if PR branch already exists
      id: check_branch
      shell: bash
      run: |
        if git ls-remote --heads origin ${{ inputs.pr_branch }} | grep -q ${{ inputs.pr_branch }}; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js
      if: steps.check_branch.outputs.exists == 'false'
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Run translation
      if: steps.check_branch.outputs.exists == 'false'
      shell: bash
      run: |
        if [[ -n "${{ inputs.target_language }}" ]]; then
          echo "Translating for specific language: ${{ inputs.target_language }}"
          npx ${{ inputs.translation_package }} -t ${{ inputs.target_language }}
        else
          echo "Translating for all languages"
          npx ${{ inputs.translation_package }}
        fi
      env:
        OPENAI_API_KEY: ${{ inputs.api_key }}

    - name: Check for modifications
      if: steps.check_branch.outputs.exists == 'false'
      id: check-changes
      shell: bash
      run: |
        if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected. Will proceed with formatting and commit."
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected after translation. Exiting workflow."
        fi
    
    - name: Setup Tools
      if: steps.check_branch.outputs.exists == 'false' && steps.check-changes.outputs.has_changes == 'true'
      uses: tanstack/config/.github/setup@main
    
    - name: Fix formatting
      if: steps.check_branch.outputs.exists == 'false' && steps.check-changes.outputs.has_changes == 'true'
      run: pnpm prettier:write

    - name: Create Pull Request
      if: steps.check_branch.outputs.exists == 'false' && steps.check-changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ inputs.github_token }}
        commit-message: ${{ inputs.commit_message }}
        title: ${{ inputs.pr_title }}
        body: ${{ inputs.pr_body }}
        branch: ${{ inputs.pr_branch }}
        delete-branch: true
        base: ${{ inputs.base_branch }}

branding:
  icon: 'globe'
  color: 'blue'